.TH man 7 "11 Sep 2024" "v4" "ldmsd_qgroup man page"

.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""/.
.SH NAME
ldmsd_qgroup \- Quota Group Feature in LDMSD

.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""/.
.SH SYNOPSIS

.nh   \" no hyphenation
.ad l \"left justified

.IP \fBqgroup_config\fR 14
.RI [quota= BYTES ]
.RI [ask_interval= TIME ]
.RI [ask_amount= BYTES ]
.RI [ask_mark= BYTES ]
.RI [reset_interval= TIME ]

.IP \fBqgroup_member_add\fR 18
.RI xprt= XPRT
.RI host= HOST
.RI [port= PORT ]
.RI [auth= AUTH ]

.IP \fBqgroup_member_del\fR 18
.RI host= HOST
.RI [port= PORT ]

.IP \fBqgroup_start\fR

.IP \fBqgroup_stop\fR

.IP \fBqgroup_info\fR

.hy 14 \" default hyphenation
.ad    \" restore text justification


.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""/.
.SH DESCRIPTION

Quota Group (\fBqgroup\fR) is a feature in LDMS to restrict the flow of LDMS
Stream data through the group in a time interval to prevent the LDMS stream from
dominating the network usage and significantly affecting the running
application. \fBqgroup\fR consists of multiple \fBldmsd\fR processes that can
donate unused \fBquota\fR to other member processes that need it, so that we can
appropriately utilize the allowed network bandwidth.

Please see \fBQGROUP MECHANISM\fR section on how \fBqgroup\fR works and
the meaning of the configuration parameters. The \fBQGROUP CONFIGURATION\fB
section contains ldmsd commands related to \fBqgroup\fR manipulation.


.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""/.
.SH QGROUP MECHANISM

Each ldmsd participating in \fBqgroup\fR has to be configured such in add all
other members into its \fBqgroup\fR member list using \fBqgroup_member_add\fR
commands. This is so that each member can communicate to each other regarding
quota requesting/donating. In addition, the ldmsd in \fBqgroup\fR should have
per-connection \fBquota\fR set (in \fBlisten\fR and \fBprdcr_add\fR command) to
limit peer's outstanding stream data holding in the member processes. If this
per-connection \fBquota\fR is not set (i.e. being UNLIMTED), the peers can send
unlimited amount of data to the processes in the \fBqgroup\fR.

Let's setup a simple \fBldmsd\fR's cluster to explain the \fBqgroup\fR
mechanism. There are 6 daemons: 4 samplers (samp.[1-4]) an 2 L1 aggregators
(L1.[1-2]). L1.1 connects (\fBprdcr_add\fR) samp.1 and samp.2. L1.2 connects to
samp.3 and samp.4. Both L1.1 and L1.2 are in \fBqgroup\fR (i.e. they
\fBqgroup_member_add\fR each other). The \fBprdcr_add.quota\fR of L1.1 and L1.2
is set to 6, and they are tracked by the samplers. The square filled boxes (■)
represent available \fBquota\fR for \fBpublish\fR operation on the samplers.
The filled diamonds (◆) on L1.1 and L1.2 represent available "return"
\fBquota\fR. Normally, when an L1 daemon finishes processing the stream data, it
returns the quota to the corresponding peer right away. With \fBqgroup\fR, The
L1 damon will take the return quota from the available return quota (◆) before
returning the quota back to the corresponding peer. If there is not enough
available return quota, the L1 daemon delays the return (in a queue) until there
is enough available return quota.

 ┌──────┐
 │samp.1│
 │■■■■■■├──────┐
 └──────┘      │     ┌────────────────┐
               └─────┤L1.1   ▽        ├───┄
 ┌──────┐      ┌─────┤◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆│
 │samp.2│      │     └───────┬────────┘
 │■■■■■■├──────┘             │
 └──────┘                    │
                             │
 ┌──────┐                    │
 │samp.3│                    │
 │■■■■■■├──────┐             │
 └──────┘      │     ┌───────┴────────┐
               └─────┤L1.2   ▽        ├───┄
 ┌──────┐      ┌─────┤◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆│
 │samp.4│      │     └────────────────┘
 │■■■■■■├──────┘
 └──────┘


As things progress, L1's available return quota (referred to as
\fBqgroup.quota\fR for distinction) will eventually run low and won't be able to
return the quota back to any peer anymore. When this happens the peer quota (for
publishing) eventually runs out as seen below.

 ┌──────┐
 │samp.1│
 │■■□□□□├──────┐
 └──────┘      │     ┌────────────────┐
               └─────┤L1.1   ▽        ├───┄
 ┌──────┐      ┌─────┤◆◇◇◇◇◇◇◇◇◇◇◇◇◇◇◇│
 │samp.2│      │     └───────┬────────┘
 │□□□□□□├──────┘             │
 └──────┘                    │
                             │
 ┌──────┐                    │
 │samp.3│                    │
 │■■■■■■├──────┐             │
 └──────┘      │     ┌───────┴────────┐
               └─────┤L1.2   ▽        ├───┄
 ┌──────┐      ┌─────┤◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆│
 │samp.4│      │     └────────────────┘
 │■■■■■■├──────┘
 └──────┘


When the \fBqgroup.quota\fR is low, i.e.  \fBqgroup.quota\fR ◆ lower than the
threshold \fBask_mark\fR (denoted as ▽ in the figure), the daemon asks for a
donation from all other members.  To prevent from asking too frequently, the
\fBqgroup\fR members ask other members in \fBask_interval\fR. The amount to ask
for is set by \fBask_amount\fR parameter.  The members who are asked for the
donation may not donate fully or may not donate at all, depending on the
members' \fBqgroup.quota\fR level.

 ┌──────┐
 │samp.1│
 │■■□□□□├──────┐
 └──────┘      │     ┌────────────────┐
               └─────┤L1.1   ▽        ├───┄
 ┌──────┐      ┌─────┤◆◆◆◆◆◆◆◆◇◇◇◇◇◇◇◇│
 │samp.2│      │     └───────┬────────┘
 │□□□□□□├──────┘             │
 └──────┘                    │
                             │
 ┌──────┐                    │
 │samp.3│                    │
 │■■■■■■├──────┐             │
 └──────┘      │     ┌───────┴────────┐
               └─────┤L1.2   ▽        ├───┄
 ┌──────┐      ┌─────┤◆◆◆◆◆◆◆◆◆◇◇◇◇◇◇◇│
 │samp.4│      │     └────────────────┘
 │■■■■■■├──────┘
 └──────┘


Asking/donating \fBqgroup.quota\fR allows the busy members to continue working
while reducing the unused \fBqgroup.quota\fR in the less busy members in the
\fBqgroup\fR. The \fBqgroup.quota\fR in all members will eventually run out, and
no stream data will be able to go through the group -- restricting LDMS stream
network usage.

The \fBqgroup.quota\fR of each member in the \fBqgroup\fR resets to its original
value in \fBreset_interval\fR time interval, and the quota returning process
continues.

The maxmum amount of stream data that go through the group per unit time can be
calculated by:

            \fBN\fR * \fBqgroup.quota\fR
            ────────────────
             \fBreset_interval\fR


.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""/.
.SH QGROUP COMMANDS

.nh   \" no hyphenation
.ad l \"left justified
.IP \fBqgroup_config\fR 14
.RI [quota= BYTES ]
.RI [ask_interval= TIME ]
.RI [ask_amount= BYTES ]
.RI [ask_mark= BYTES ]
.RI [reset_interval= TIME ]
.hy 14 \" default hyphenation
.ad    \" restore text justification
.RS 4
.PP
Configure the specified qgroup parameters. The parameters not specifying to the
command will be left untouched.
.TP
.BI "[quota=" BYTES ]
The amount of our quota (bytes). The \fIBYTES\fR can be expressed with
quantifiers, e.g. "1k" for 1024 bytes. The supported quantifiers are
"b" (bytes), "k" (kilobytes), "m" (megabytes), "g" (gigabytes) and "t"
(terabytes).
.TP
.BI "[ask_interval=" TIME ]
The time interval to ask the members when our quota is low. The \fITIME\fR can
be expressed with units, e.g. "1s", but will be treated as microseconds if no
units is specified. The supported units are "us" (microseconds), "ms"
(milliseconds), "s" (seconds), "m" (minutes), "h" (hours), and "d" (days).
.TP
.BI "[ask_amount=" BYTES ]
The amount of quota to ask from our members. The \fIBYTES\fR can be expressed
with quantifiers, e.g. "1k" for 1024 bytes. The supported quantifiers are "b"
(bytes), "k" (kilobytes), "m" (megabytes), "g" (gigabytes) and "t" (terabytes).
.TP
.BI "[ask_mark=" BYTES ]
The amount of quota to determine as 'low', to start asking quota from other
members. The \fIBYTES\fR can be expressed with quantifiers, e.g. "1k" for 1024
bytes. The supported quantifiers are "b" (bytes), "k" (kilobytes), "m"
(megabytes), "g" (gigabytes) and "t" (terabytes).
.TP
.BI "[reset_interval=" TIME ]
The time interval to reset our quota to its original value. The \fITIME\fR can
be expressed with units, e.g. "1s", but will be treated as microseconds if no
units is specified. The supported units are "us" (microseconds), "ms"
(milliseconds), "s" (seconds), "m" (minutes), "h" (hours), and "d" (days).
.RE


.nh   \" no hyphenation
.ad l \"left justified
.IP \fBqgroup_member_add\fR 18
.RI xprt= XPRT
.RI host= HOST
.RI [port= PORT ]
.RI [auth= AUTH ]
.hy 14 \" default hyphenation
.ad    \" restore text justification
.RS 4
.PP
Add a member into the process' qgroup member list.
.TP
.BI "xprt=" XPRT
The transport type of the connection (e.g. "sock").
.TP
.BI "host=" HOST
The hostname or IP address of the member.
.TP
.BI "[port=" PORT ]
The port of the member (default: 411).
.TP
.BI "[auth=" AUTH_REF ]
The reference to the authentication domain (the \fBname\fR in \fBauth_add\fR
command) to be used in this connection If not specified, the default
authentication domain of the daemon is used.
.RE

.nh   \" no hyphenation
.ad l \"left justified
.IP \fBqgroup_member_del\fR 18
.RI host= HOST
.RI [port= PORT ]
.hy 14 \" default hyphenation
.ad    \" restore text justification
.RS 4
.PP
Delete a member from the list.
.TP
.BI "host " HOST
The hostname or IP address of the member.
.TP
.BI "[port " PORT ]
The port of the member (default: 411).
.RE

.nh   \" no hyphenation
.ad l \"left justified
.IP \fBqgroup_start\fR
.hy 14 \" default hyphenation
.ad    \" restore text justification
.RS 4
.PP
Start the qgroup service.
.RE

.nh   \" no hyphenation
.ad l \"left justified
.IP \fBqgroup_stop\fR
.hy 14 \" default hyphenation
.ad    \" restore text justification
.RS 4
.PP
Stop the qgroup service.
.RE

.nh   \" no hyphenation
.ad l \"left justified
.IP \fBqgroup_info\fR
.hy 14 \" default hyphenation
.ad    \" restore text justification
.RS 4
.PP
Print the qgroup information (e.g. current quota value, parameter values, member
connection states, etc).
.RE


.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""/.
.SH EXAMPLE
.nh   \" no hyphenation
.ad l \"left justified

.IP qgroup_config 14
quota=1M ask_interval=200ms ask_mark=200K ask_amount=200K reset_interval=1s

.IP qgroup_member_add 18
host=node-2 port=411 xprt=sock auth=munge

.IP qgroup_member_add 18
host=node-3 port=411 xprt=sock auth=munge

.IP qgroup_start

.hy 14 \" default hyphenation
.ad    \" restore text justification

.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""/.
.SH SEE ALSO
.BR ldmsd "(8), " ldmsd_controller "(8), " ldms_quickstart "(7)"
